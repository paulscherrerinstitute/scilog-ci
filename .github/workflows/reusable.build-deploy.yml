name: build-deploy

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      registry:
        required: false
        type: string
        default: ghcr.io
      image_name:
        required: true
        type: string
      helm_ci_vars:
        required: false
        type: string
      release_name:
        required: true
        type: string
      environment:
        required: true
        type: string
      tag:
        required: true
        type: string
      namespace_prefix:
        required: false
        type: string
        default: scicat-
      helm_chart:
        required: false
        type: string
        default: generic_service_chart
      docker_build_files:
        required: false
        type: string
        default: ""
      submodule_commit: 
        description: commit of the submodule to deploy on workflow dispatch
        required: false
        type: string
      commit: 
        description: commit of the CI repo to deploy on workflow dispatch
        required: false
        type: string
      submodule: 
        description: name of the submodule folder
        required: false
        type: string
    secrets: 
      KUBECONFIG: 
        description: kubeconfig file
        required: true
      JSON_SECRETS: 
        description: other secrets in json format
        required: false
      SSH_PRIVATE_KEY: 
        description: ssh key to private submodule
        required: false
      
jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        ref: ${{ inputs.commit }}

    - if: ${{ inputs.submodule_commit }}
      uses: ./.github/actions/checkout-submodule
      with: 
        submodule_commit: ${{ inputs.submodule_commit }}
        commit: ${{ inputs.commit }}
        submodule: ${{ inputs.submodule }}

    - name: Copy docker build specific files
      run: |
        for f in ${{ inputs.docker_build_files }}; 
        do
          cp -r ${f%%:*} ${f#*:};
        done

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3.6.2
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=${{ inputs.tag }}
    
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: 
      - build

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ inputs.commit }}

    - name: Deploy to k8s using helm
      id: helm-deploy
      uses: 'glopezep/helm@v1.7.1'
      with:
        release: '${{ inputs.release_name }}'
        namespace: '${{ inputs.namespace_prefix }}${{ inputs.environment }}'
        chart: '${{ inputs.helm_chart }}'
        helm: helm3
        timeout: 10m
        values: |
         ciRepository: ${{ inputs.registry }}/${{ inputs.image_name }}
         ciTag: ${{ inputs.tag }}
         ciVars: ${{ inputs.helm_ci_vars }}
        value-files: >-
          [
            "helm_configs/${{ inputs.release_name }}/values.yaml",
            "helm_configs/${{ inputs.release_name }}/${{ inputs.environment }}/values.yaml"
          ]
        secrets: '${{ secrets.JSON_SECRETS }}'
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
